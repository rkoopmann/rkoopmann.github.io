- heading: Simple Index
  description: You can add an index.
  steps:
    - values: apple banana coconut
      delimiter: space
      template: "?i. ?"
      placeholder: "?"
      joiner: space
  result: |
    1. apple 2. banana 3. coconut
- heading: Changing Case
  description: You can easily change casing of value elements.
  steps:
    - values: APPLE Banana coconut
      delimiter: space
      template: "Uppercase: \\U?, Capitalized: \\u?, Lowercase: \\L?"
      placeholder: "?"
      joiner: new line
  result: |
    Uppercase: APPLE, Capitalized: Apple, Lowercase: apple
    Uppercase: BANANA, Capitalized: Banana, Lowercase: banana
    Uppercase: COCONUT, Capitalized: Coconut, Lowercase: coconut
- heading: Escaping Placeholders
  description: In the event you need to use the placeholder value in the template itself, you can do so by prefixing the placeholder with `\`.
  steps:
    - values: APPLE Banana coconut
      delimiter: space
      template: SUM(_) AS var\__i
      placeholder: underscore
      joiner: new line
  result: |
    SUM(APPLE) AS var_1,
    SUM(Banana) AS var_2,
    SUM(coconut) AS var_3,
- heading: Coding 1
  description: Quickly build out where conditions in SQL
  steps:
    - values: "spend|impressions|clicks|conversions|transactrions|revenue"
      delimiter: pipe
      template: "([x] IS NOT NULL)"
      placeholder: "[x]"
      joiner: and
  result: |
    (apple IS NOT NULL) and (banana IS NOT NULL) and (coconut IS NOT NULL)
- heading: Coding 2
  description: Create new variables in SQL (and adjust the index start)
  steps:
    - values: "spend|impressions|clicks|conversions|transactrions|revenue"
      delimiter: pipe
      template: "SUM(?) AS fruit_?i \\i-1"
      placeholder: "?"
      joiner: comma
  result: |
    SUM(apple) AS fruit_0 , SUM(banana) AS fruit_1 , SUM(coconut) AS fruit_2
- heading: Chaining Permutations
  description: Feed the output of one permutation into another permutation.
  shortcuts_link: "https://www.icloud.com/shortcuts/2dcec0a841ca49e68a44da686414ffbb"
  steps:
    - values: "apple banana"
      delimiter: space
      template: "? is not _"
      placeholder: "?"
      joiner: and
    - values: "banana coconut"
      delimiter: space
      template: "(results of step 1)"
      placeholder: underscore
      joiner: or
  result: |
    apple is not banana and banana is not banana or apple is not coconut and banana is not coconut
