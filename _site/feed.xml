<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-05-23T00:15:11-05:00</updated><id>http://localhost:4000/</id><title type="html">hi</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">Filter, Orgy, Vampires Everywhere, Death Valley High</title><link href="http://localhost:4000/events/2016/04/20/filter.html" rel="alternate" type="text/html" title="Filter, Orgy, Vampires Everywhere, Death Valley High" /><published>2016-04-20T19:00:00-05:00</published><updated>2016-04-20T19:00:00-05:00</updated><id>http://localhost:4000/events/2016/04/20/filter</id><content type="html" xml:base="http://localhost:4000/events/2016/04/20/filter.html">&lt;h2 id=&quot;my-brief-history-with-filter&quot;&gt;My Brief History with &lt;em&gt;Filter&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;I’ve been listening to &lt;em&gt;Short Bus&lt;/em&gt; for just over 20 years. In comparison to other albums of the time, this was a solid end-to-end album.&lt;/p&gt;

&lt;p&gt;When &lt;em&gt;Filter&lt;/em&gt;’s follow-up album, &lt;em&gt;Title of Album&lt;/em&gt; came out, I was not overly impressed. The lead single, &lt;em&gt;Take a Picture&lt;/em&gt;, was too upbeat for me.&lt;/p&gt;

&lt;p&gt;Earlier this year, some 20 years after &lt;em&gt;Short Bus&lt;/em&gt; was released, I find myself planning a brief work trip in Minneapolis when &lt;a href=&quot;http://songkick.com&quot;&gt;Songkick&lt;/a&gt; alerts me to a Filter show the night of my stay. Tickets were cheap enough at $27, so I bought them later that evening.&lt;/p&gt;

&lt;h2 id=&quot;the-show&quot;&gt;The Show&lt;/h2&gt;

&lt;p&gt;The ticket said doors opened at 7:00 so I showed up around 8:15 hoping to miss &lt;em&gt;Death Valley High&lt;/em&gt; and &lt;em&gt;Vampires Everywhere&lt;/em&gt;. I was only interested in Filter and, perhaps a little bit of Orgy. I missed &lt;em&gt;Death Valley High&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;vampires-everywhere&quot;&gt;&lt;em&gt;Vampires Everywhere&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;These guys were pretty descent musicians, but their sound just didn’t resonate with me. It’s always nice to see the musicians going through the setup and teardown for their own performance rather than hired hands.&lt;/p&gt;

&lt;h3 id=&quot;orgy&quot;&gt;&lt;em&gt;Orgy&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;A little closer to my style, but still not my groove. Also, the only real song they do that I know, &lt;em&gt;Blue Monday&lt;/em&gt; was played musically pretty well, but the singer insisted on letting the crowd sing most of the song. These guys also helped with setup/teardown.&lt;/p&gt;

&lt;h3 id=&quot;filter&quot;&gt;&lt;em&gt;Filter&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Admittedly, I was hoping for something of a 20th anniversary show for &lt;em&gt;Short Bus&lt;/em&gt; like &lt;em&gt;The Toadies&lt;/em&gt; and &lt;em&gt;Candlebox&lt;/em&gt; did, but no dice.&lt;/p&gt;</content><author><name></name></author><category term="events" /><category term="concert" /><summary type="html">My Brief History with Filter</summary></entry><entry><title type="html">Foo Fighters</title><link href="http://localhost:4000/events/2015/08/11/Foo-Fighters.html" rel="alternate" type="text/html" title="Foo Fighters" /><published>2015-08-11T20:00:00-05:00</published><updated>2015-08-11T20:00:00-05:00</updated><id>http://localhost:4000/events/2015/08/11/Foo-Fighters</id><content type="html" xml:base="http://localhost:4000/events/2015/08/11/Foo-Fighters.html">&lt;p&gt;Setlist:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Everlong&lt;/li&gt;
  &lt;li&gt;Monkey Wrench&lt;/li&gt;
  &lt;li&gt;Learn to Fly&lt;/li&gt;
  &lt;li&gt;Something From Nothing&lt;/li&gt;
  &lt;li&gt;The Pretender&lt;/li&gt;
  &lt;li&gt;Big Me (Slow Version)&lt;/li&gt;
  &lt;li&gt;Congregation&lt;/li&gt;
  &lt;li&gt;Walk&lt;/li&gt;
  &lt;li&gt;Times Like These&lt;/li&gt;
  &lt;li&gt;I’m the One (Van Halen cover) (snippet played during band introduction)&lt;/li&gt;
  &lt;li&gt;Cold Day in the Sun&lt;/li&gt;
  &lt;li&gt;Skin and Bones (Acoustic w/ Rami on Accordian)&lt;/li&gt;
  &lt;li&gt;My Hero (Acoustic w/ Rami on Accordian)&lt;/li&gt;
  &lt;li&gt;Outside&lt;/li&gt;
  &lt;li&gt;Breakout&lt;/li&gt;
  &lt;li&gt;All My Life&lt;/li&gt;
  &lt;li&gt;Under Pressure (Queen cover)&lt;/li&gt;
  &lt;li&gt;White Limo&lt;/li&gt;
  &lt;li&gt;Arlandria&lt;/li&gt;
  &lt;li&gt;These Days&lt;/li&gt;
  &lt;li&gt;This Is a Call&lt;/li&gt;
  &lt;li&gt;Ain’t Talkin’ ‘Bout Love (Van Halen cover)&lt;/li&gt;
  &lt;li&gt;Panama (Van Halen cover)&lt;/li&gt;
  &lt;li&gt;Miss You (The Rolling Stones cover)&lt;/li&gt;
  &lt;li&gt;Best of You&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://www.setlist.fm/setlist/foo-fighters/2015/xcel-energy-center-st-paul-mn-63f7d247.html&quot;&gt;setlist&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="concert" /><summary type="html">Setlist:</summary></entry><entry><title type="html">Simplenote to Vesper</title><link href="http://localhost:4000/ios/2015/03/01/simplenote-to-vesper.html" rel="alternate" type="text/html" title="Simplenote to Vesper" /><published>2015-03-01T19:00:00-06:00</published><updated>2015-03-01T19:00:00-06:00</updated><id>http://localhost:4000/ios/2015/03/01/simplenote-to-vesper</id><content type="html" xml:base="http://localhost:4000/ios/2015/03/01/simplenote-to-vesper.html">&lt;p&gt;It started with &lt;a href=&quot;https://twitter.com/BenjaminBrooks/status/571438237710811136&quot;&gt;a tweet from @benjaminbrooks&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;Has anyone written a tool to move your data somehow from Simplenote to Vesper, asking for me. I mean a friend, like someone else.&lt;/p&gt;&amp;mdash; Ben Brooks (@BenjaminBrooks) &lt;a href=&quot;https://twitter.com/BenjaminBrooks/status/571438237710811136&quot;&gt;February 27, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;p&gt;When Vesper first hit iOS last year, I had the same question. I wanted to give Vespre a fair chance, but without being able to import from my existing note-taking app (Simplenote), Vesper had an uphill battle. (Same goes for Drafts).&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;On OS X, Simplenote prefers to store notes in a &lt;a href=&quot;http://www.sqlite.org&quot;&gt;SQLite&lt;/a&gt; database, so I figured Simplenote for iOS would do the same. I figured Vesper would be doing likewise. A quick check with iExplorer confirmed this.&lt;/p&gt;

&lt;p&gt;I exported a copy of both databases and quickly created some basic SQL queries to get notes, unique tags, and note-tag combination data in reasonable format for exporting from Simplenote database and importing into Vesper database. (At this point, I force-quit Vesper on iOS.)&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/rkoopmann/cbffa5780bfe0c9f45a0.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Creating these queries was quick work in SQLPro for SQLite. To actually transfer the content to the Vesper database, I simply exported the resulting tables from the Simplenote database as JSON files and then imported them in the Vesper database in this order:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Notes&lt;/li&gt;
  &lt;li&gt;Tags&lt;/li&gt;
  &lt;li&gt;Note-Tag relations&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once that’s done, copy the modified Vesper database back to the Vesper Documents directory in iExplorer (it should ask about overwriting the existing file), say yes, wait a few seconds for iExplorer to complete the sync, fire up Vesper (you already force-quit it above, right?) and look at all the Simplenote data. They should all be properly tagged and the dates intact. I think.&lt;/p&gt;

&lt;p&gt;If only there were a Vesper for OS X available, this would possibly have been easier?&lt;/p&gt;

&lt;p&gt;Let’s see how well Vesper sticks for me now that everything is in it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apps Used:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/vesper/id655895325?mt=8&amp;amp;at=10l4LH&quot;&gt;Vesper&lt;/a&gt; (iOS) $8.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/simplenote/id289429962?mt=8&amp;amp;at=10l4LH&quot;&gt;Simplenote&lt;/a&gt; (iOS) $0. &lt;em&gt;Notational Velocity or nvALT on OS X would probably also have the information needed, but you’d need to wrangle that data yourself.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;iExplorer (OS X). &lt;em&gt;For pulling and pushing data to your iOS device. I used version 2.2.1.6. &lt;a href=&quot;http://www.macroplant.com/iexplorer/&quot;&gt;v. 3.6.6.0&lt;/a&gt; might work?&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/sqlpro-for-sqlite-sql-database/id586001240?mt=12&amp;amp;at=10l4LH&quot;&gt;SQLPro for SQLite Pro&lt;/a&gt; (OS X). At one point, this was $2; it’s now $20. &lt;em&gt;If you’re cozy with tromping around the terminal with SQLite, you don’t really need an SQLite app. I’m cozy enough, but still prefer to use the app.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Fair Warning&lt;/strong&gt;: You should never, &lt;em&gt;ever&lt;/em&gt; run code you don’t understand. Backup your data. This works for me, but my Simplenote notes are fairly…simple. your results may differ. if this breaks anything, it’s probably operator error. please email marco.&lt;/p&gt;</content><author><name></name></author><category term="app" /><summary type="html">It started with a tweet from @benjaminbrooks:</summary></entry><entry><title type="html">Current file path</title><link href="http://localhost:4000/sas/2014/10/29/current-file-path.html" rel="alternate" type="text/html" title="Current file path" /><published>2014-10-29T20:00:00-05:00</published><updated>2014-10-29T20:00:00-05:00</updated><id>http://localhost:4000/sas/2014/10/29/current-file-path</id><content type="html" xml:base="http://localhost:4000/sas/2014/10/29/current-file-path.html">&lt;p&gt;Sometimes I need to reference the path of the current (saved) file. Thanks to &lt;a href=&quot;http://stackoverflow.com/a/14416896/142229&quot;&gt;a stack overflow post&lt;/a&gt;, I can easily do that.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%let filepath=%substr(%sysget(SAS_EXECFILEPATH),1,
  %eval(%length(%sysget(SAS_EXECFILEPATH))-%length(%sysget(SAS_EXECFILENAME))));
%put &amp;amp;FILEPATH;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="sas" /><category term="snippet" /><summary type="html">Sometimes I need to reference the path of the current (saved) file. Thanks to a stack overflow post, I can easily do that.</summary></entry><entry><title type="html">finding conventions, establishing standards</title><link href="http://localhost:4000/sas/2014/08/26/finding-conventions.html" rel="alternate" type="text/html" title="finding conventions, establishing standards" /><published>2014-08-26T22:52:37-05:00</published><updated>2014-08-26T22:52:37-05:00</updated><id>http://localhost:4000/sas/2014/08/26/finding-conventions</id><content type="html" xml:base="http://localhost:4000/sas/2014/08/26/finding-conventions.html">&lt;p&gt;I’m creating a perl script that reads through all &lt;code class=&quot;highlighter-rouge&quot;&gt;.sas&lt;/code&gt; files in a directory taking note when a SAS macro is being defined.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;I’m in a rut right now trying to figure out how to&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%* in SAS, macros can be defined a few different ways;

%macro regular(param1);
%mend;

%macro withDescription / des='bah';
%mend;

%macro emptyOptions () ;
%mend;

%macro noOptions;%mend;

%macro spacedOut (
  bah=ram
) / some options;
%mend;

%macro noSpace(a,b=c,d=e)/des='something';
%mend;

%macro outside;
	%macro inside;
	%mend;
%mend;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I’ve developed some perl code to index these macros.&lt;/p&gt;

&lt;div class=&quot;language-perl highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;%macro&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(??(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)??&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\.*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;%macro&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;## capture macro statement&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;%macro&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*.+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))??;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;## capture macro name &amp;amp; paren with contents&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name>rkoopmann</name></author><category term="sas" /><category term="perl" /><summary type="html">I’m creating a perl script that reads through all .sas files in a directory taking note when a SAS macro is being defined.</summary></entry><entry><title type="html">we blew it</title><link href="http://localhost:4000/post/2014/08/22/we-blew-it.html" rel="alternate" type="text/html" title="we blew it" /><published>2014-08-22T00:00:00-05:00</published><updated>2014-08-22T00:00:00-05:00</updated><id>http://localhost:4000/post/2014/08/22/we-blew-it</id><content type="html" xml:base="http://localhost:4000/post/2014/08/22/we-blew-it.html">&lt;p&gt;&lt;a href=&quot;http://twitter.com/eggfreckles&quot;&gt;Thomas Brand&lt;/a&gt; on the hoopla surrounding twitter’s new &lt;a href=&quot;https://support.twitter.com/articles/164083-what-s-a-twitter-timeline?_ga=1.208952082.1652363612.1408714302&quot;&gt;timeline&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;As far as I am concerned, we had our chance to cultivate our own social network on App.net, and we blew it. Now who ever wants to stay with the bird has to live with the consequences.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;spot on.&lt;/p&gt;</content><author><name></name></author><category term="post" /><category term="twitter" /><summary type="html">Thomas Brand on the hoopla surrounding twitter’s new timeline:</summary></entry><entry><title type="html">getOption</title><link href="http://localhost:4000/sas/2014/08/18/getOption.html" rel="alternate" type="text/html" title="getOption" /><published>2014-08-18T15:32:47-05:00</published><updated>2014-08-18T15:32:47-05:00</updated><id>http://localhost:4000/sas/2014/08/18/getOption</id><content type="html" xml:base="http://localhost:4000/sas/2014/08/18/getOption.html">&lt;p&gt;SAS has a number of &lt;a href=&quot;http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a000103941.htm&quot;&gt;system options&lt;/a&gt; that we can access through dictionary tables (or sashelp v-tables) or with the built-in &lt;code class=&quot;highlighter-rouge&quot;&gt;getoption&lt;/code&gt; function.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;For a given option, I’d like to be able to return the value through a macro call. Something like &lt;code class=&quot;highlighter-rouge&quot;&gt;line_width=%getOption(LINESIZE);&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%macro getOption(optname);
%global getOption_value;
%let getOption_value=Specified option not found;
data _null_;
	call symput('getOption_value', getoption(&quot;&amp;amp;OPTNAME&quot;));
run;
&amp;amp;getOption_value;
%mend;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><category term="sas" /><category term="macro" /><category term="system options" /><summary type="html">SAS has a number of system options that we can access through dictionary tables (or sashelp v-tables) or with the built-in getoption function.</summary></entry><entry><title type="html">benchmarking the sasload statement</title><link href="http://localhost:4000/sas/2014/07/17/benchmarking-sasload.html" rel="alternate" type="text/html" title="benchmarking the sasload statement" /><published>2014-07-17T14:17:00-05:00</published><updated>2014-07-17T14:17:00-05:00</updated><id>http://localhost:4000/sas/2014/07/17/benchmarking-sasload</id><content type="html" xml:base="http://localhost:4000/sas/2014/07/17/benchmarking-sasload.html">&lt;p&gt;in the middle of re-writing some macro code where different datasets were being accessed a number of times, i came across the &lt;code class=&quot;highlighter-rouge&quot;&gt;sasload&lt;/code&gt; statement being called for each datasets. something like this:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sasfile sashelp.stocks open;
	%macro1();
	%macro2();
	%macro3();
sasfile sashelp.stocks close;

sasfile sashelp.class open;
	%macro1();
	%macro4();
sasfile sashelp.class close;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;!--more--&gt;

&lt;p&gt;i’d always assumed that the &lt;code class=&quot;highlighter-rouge&quot;&gt;sasfile&lt;/code&gt; would speed up subsequent dataset access time, but never really checked.&lt;/p&gt;

&lt;p&gt;so i’m fixing that now.&lt;/p&gt;

&lt;p&gt;first, a couple novel macros that i’m using for this benchmark.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%macro grabTime(stop);
	%global teststart;
	proc sql;
	select distinct
	%if &quot;&amp;amp;stop&quot; eq &quot;&quot; %then
		datetime() format=20.6
		into :testStart
	;
	%else
		datetime() - &amp;amp;teststart format=20.6
	;
	from sashelp.class;
	quit;
%mend;

%macro summarize(dataset,class,variable,suffix);
proc summary data=&amp;amp;dataset nway;
	class &amp;amp;class;
	var &amp;amp;variable;
	output out=Test&amp;amp;suffix mean=;
run;
%mend;

%macro levels(dataset,variable,suffix);
proc freq levels data=&amp;amp;dataset;
	table &amp;amp;variable;
run;
%mend;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;baseline&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;run two macros in sequence 500 times.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%macro baseline;
%grabtime();

%do i = 1 %to 500;
	%summarize(sashelp.stocks,stock,open,&amp;amp;i);
	%levels(sashelp.stocks,stock,&amp;amp;i);
%end;

%grabtime(stop);
%mend;
%baseline;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sasfile&lt;/code&gt; outside loop&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;run two macros in sequence 500 times but load the dataset at the start and end.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%macro outside;
%grabtime();

sasfile sashelp.stocks open;
%do i = 1 %to 500;
	%summarize(sashelp.stocks,stock,open,&amp;amp;i);
	%levels(sashelp.stocks,stock,&amp;amp;i);
%end;
sasfile sashelp.stocks close;

%grabtime(stop);
%mend;
%outside;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sasfile&lt;/code&gt; inside loop&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;run two macros in sequence 500 times but load the dataset each iteration.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%macro inside;
%grabtime();

%do i = 1 %to 500;
	sasfile sashelp.stocks open;
	%summarize(sashelp.stocks,stock,open,&amp;amp;i);
	%levels(sashelp.stocks,stock,&amp;amp;i);
	sasfile sashelp.stocks close;
%end;

%grabtime(stop);
%mend;
%inside;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;turns out, in this benchmark, &lt;em&gt;not&lt;/em&gt; using &lt;code class=&quot;highlighter-rouge&quot;&gt;sasfile&lt;/code&gt; is actually the best option.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;baseline: 12.964 seconds.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sasfile&lt;/code&gt; outside loop: 13.432 seconds (+3.61%).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sasfile&lt;/code&gt; inside loop: 14.166 seconds (+9.27%).&lt;/li&gt;
&lt;/ul&gt;</content><author><name>rkoopmann</name></author><category term="sas" /><category term="benchmark" /><summary type="html">in the middle of re-writing some macro code where different datasets were being accessed a number of times, i came across the sasload statement being called for each datasets. something like this:</summary></entry><entry><title type="html">On Interruptions</title><link href="http://localhost:4000/post/2014/07/14/on-interruptions.html" rel="alternate" type="text/html" title="On Interruptions" /><published>2014-07-14T00:00:00-05:00</published><updated>2014-07-14T00:00:00-05:00</updated><id>http://localhost:4000/post/2014/07/14/on-interruptions</id><content type="html" xml:base="http://localhost:4000/post/2014/07/14/on-interruptions.html">&lt;p&gt;Last month, Ben Brooks ran &lt;a href=&quot;https://brooksreview.net/2014/06/interruption-survey/&quot;&gt;a poll on his website&lt;/a&gt; asking readers their attitudes toward interrupting other people using various writing devices. I reached out to Ben and he provided with me the poll data for analysis.&lt;/p&gt;

&lt;p&gt;With my initial, and somewhat hasty, pass through the data, I sent the results back to Ben, which he &lt;a href=&quot;https://brooksreview.net/2014/06/on-interruptions&quot;&gt;posted&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The thing is, in my haste, I goofed a bit. I had originally ran chi square tests and identified the cells with the largest deviation as being “significantly different”. &lt;a href=&quot;http://maxmasnick.com&quot;&gt;Max Masnick&lt;/a&gt;, an epidemiology PhD student, correctly pointed out that a chi square test only identifies that &lt;em&gt;something&lt;/em&gt; is different; it does not identify &lt;em&gt;what&lt;/em&gt; is different. For that, you need some additional testing.&lt;/p&gt;

&lt;p&gt;I recently went back, revisited the data, and updated my analysis. And Ben kindly posted &lt;a href=&quot;https://brooksreview.net/further-interruption-survey-analysis/&quot;&gt;that update&lt;/a&gt;.&lt;/p&gt;</content><author><name>rkoopmann</name></author><category term="post" /><summary type="html">Last month, Ben Brooks ran a poll on his website asking readers their attitudes toward interrupting other people using various writing devices. I reached out to Ben and he provided with me the poll data for analysis.</summary></entry><entry><title type="html">rebuilding wide macros</title><link href="http://localhost:4000/sas/2014/07/09/rebuilding-wide-macros.html" rel="alternate" type="text/html" title="rebuilding wide macros" /><published>2014-07-09T00:00:00-05:00</published><updated>2014-07-09T00:00:00-05:00</updated><id>http://localhost:4000/sas/2014/07/09/rebuilding-wide-macros</id><content type="html" xml:base="http://localhost:4000/sas/2014/07/09/rebuilding-wide-macros.html">&lt;p&gt;Recently I needed to pull the values of potentially long macro variables (more than 200 characters) from the dictionary tables (&lt;code class=&quot;highlighter-rouge&quot;&gt;sashelp.vmacro&lt;/code&gt; in this case). I couldn’t simply use the actual macro variable because the main program was dataset-driven. The bottom line was that I needed a dataset containing the macro values in a single variable with one observation per macro variable.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;For example,&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;data _null_;
	format long_macro $512.;
	long_macro=repeat('0123456789ABCDEF', 31);
	call symput('LONG_MACRO', long_macro);
run;

proc print data=sashelp.vmacro noobs;
    where scope eq 'GLOBAL'
    	and name eq 'LONG_MACRO';
    format value $25.;
    var offset value;
run;

/* output
offset    value

    0     0123456789ABCDEF012345678
  200     89ABCDEF0123456789ABCDEF0
  400     0123456789ABCDEF012345678
*/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;My initial approach was to simply go over the dictionary table and retain/append a new variable but neither &lt;code class=&quot;highlighter-rouge&quot;&gt;cat&lt;/code&gt; nor &lt;code class=&quot;highlighter-rouge&quot;&gt;||&lt;/code&gt; worked quite right. The issue is that spaces are important in my case, so the &lt;code class=&quot;highlighter-rouge&quot;&gt;cats&lt;/code&gt; function was a no-go[^The macro values could contain spaces and if those spaces happened to land on the 200-character increments, then two words would get smashed together.].&lt;/p&gt;

&lt;p&gt;I &lt;em&gt;could&lt;/em&gt; have used a &lt;code class=&quot;highlighter-rouge&quot;&gt;substr&lt;/code&gt; function on the left of the equal like this:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;data _null_;
	set sashelp.vmacro;
	where scope eq 'GLOBAL'
		and name eq 'LONG_MACRO';
	format fullvalue $512.;
	retain fullvalue;
	start = (_n_-1) * 200 + 1;
	substr(fullvalue, start, 200) = value;
	length=length(fullvalue);
	put _n_ @5 start @10 length fullvalue $25.;
run;

/* output
1   1    200 0123456789ABCDEF012345678
2   201  400 0123456789ABCDEF012345678
3   401  500 0123456789ABCDEF012345678
*/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Which is simple enough when you need to get to exactly one macro variable, but with more than one, you’d need to sort the data and use &lt;code class=&quot;highlighter-rouge&quot;&gt;first.&lt;/code&gt; variables to set up and increment a counter variable as opposed to simply using &lt;code class=&quot;highlighter-rouge&quot;&gt;_n_&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then I figured I’d try to simply transpose the dictionary table and then &lt;code class=&quot;highlighter-rouge&quot;&gt;cat&lt;/code&gt; the different columns. This worked.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;***	get the macro snippets sorted right.;
proc sort data=sashelp.vmacro out=macros;
	by scope name offset;
run;

***	transpose by scope and name on offset.;
proc transpose data=macros
		out=macros prefix=offset_;
	by scope name;
	id offset;
	var value;
run;

***	reassemble macros to original (wider) values.;
data macros(rename=value2=value);
	format scope name $32. value2 $32000.;
    set macros;
	value2 = cat(of offset_:);
	drop value offset_: _name_ _label_;
run;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now I have access to the full macro variable values from a dataset for any proc I need.&lt;/p&gt;</content><author><name>rkoopmann</name></author><category term="sas" /><category term="macro" /><summary type="html">Recently I needed to pull the values of potentially long macro variables (more than 200 characters) from the dictionary tables (sashelp.vmacro in this case). I couldn’t simply use the actual macro variable because the main program was dataset-driven. The bottom line was that I needed a dataset containing the macro values in a single variable with one observation per macro variable.</summary></entry></feed>